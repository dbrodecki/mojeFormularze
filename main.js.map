{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;ACdtE;AAAA;AAAA;AAAA;AAAwD;;;AAOjD,MAAM,YAAY;IAGvB,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,wDAAS,CAAC;YAC1B,IAAI,EAAE,IAAI,0DAAW,CAAC,MAAM,CAAC;YAC7B,KAAK,EAAE,IAAI,0DAAW,CAAC,gBAAgB,CAAC;YACxC,OAAO,EAAE,IAAI,0DAAW,CAAC,sBAAsB,CAAC;SACjD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,IAAe;QACtB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;;wEAfU,YAAY;4FAAZ,YAAY;QCRzB,yEAAuB;QACrB,yEAAuB;QACnB,qEAAI;QAAA,iFAAsB;QAAA,4DAAK;QAC/B,qEAAI;QAAA,+EAAoB;QAAA,4DAAK;QAAA,gEAAI;QACrC,4DAAM;QACR,4DAAM;QAGN,0EAAyD;QAA9B,wIAAY,wBAAgB,IAAC;QACtD,sEAAK;QACH,wEAAO;QACL,kEAAK;QAAA,iEAAI;QACT,uEAAsD;QACxD,4DAAQ;QACV,4DAAM;QACN,uEAAK;QACH,yEAAO;QACL,mEAAM;QAAA,iEAAI;QACV,uEAAwD;QAC1D,4DAAQ;QACV,4DAAM;QACN,uEAAK;QACH,yEAAO;QACL,qEAAQ;QAAA,iEAAI;QACZ,uEAA4D;QAC9D,4DAAQ;QACV,4DAAM;QACN,6EAAsB;QAAA,gEAAI;QAAA,4DAAS;QACrC,4DAAO;;QApBD,0DAAoB;QAApB,iFAAoB;;;;;;;;;;;;;;ACR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEL;AAEN;;AAaxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAJJ;YACP,uEAAa;YACb,kEAAmB;SACpB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,kEAAmB;;;;;;;;;;;;;;;;;;;ACZvB,oCAAoC;AACW;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC;;;;;;;;;;;;ACXpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  myForm!: FormGroup;\n\n  ngOnInit() {\n    this.myForm = new FormGroup({\n      name: new FormControl('Ania'),\n      email: new FormControl('ania@p.lodz.pl'),\n      message: new FormControl('dzisiaj jestem na P≈Å')\n    });\n  }\n\n  onSubmit(form: FormGroup) {\n    console.log('Name', form.value.name);\n    console.log('Email', form.value.email);\n    console.log('Message', form.value.message);\n  }\n}\n","<div class=\"container\">\n  <div class=\"jumbotron\">\n      <h1>PROJEKT mojeFORMULARZE</h1>\n      <h2>Formularze reaktywne</h2><br>\n  </div>\n</div>\n\n\n<form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit(myForm)\">\n  <div>\n    <label>\n      Name:<br>\n      <input formControlName=\"name\" placeholder=\"Your name\">\n    </label>\n  </div>\n  <div>\n    <label>\n      Email:<br>\n      <input formControlName=\"email\" placeholder=\"Your email\">\n    </label>\n  </div>\n  <div>\n    <label>\n      Message:<br>\n      <input formControlName=\"message\" placeholder=\"Your message\">\n    </label>\n  </div>\n  <button type=\"submit\">Send</button>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","// tslint:disable:no-unused-variable\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}